class Solution(object):
    def ladderLength(self, beginWord, endWord, wordList):
        memo = collections.defaultdict(list)
        for word in wordList:
            for i in range(len(word)):
                memo[word[:i]+'#'+word[i+1:]].append(word)

        seen = set()
        q = collections.deque([(beginWord, 1)])
        while q:
            word, steps = q.popleft()
            if word==endWord: return steps
            seen.add(word)

            for i in range(len(word)):
                for next_word in memo[word[:i]+'#'+word[i+1:]]:
                    if next_word not in seen:
                        q.append((next_word, steps+1))
        return 0